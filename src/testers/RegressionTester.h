//
// Author: Brozekm@students.zcu.cz, markovd@students.zcu.cz
//

#ifndef SMARTTESTER_REGRESSIONTESTER_H
#define SMARTTESTER_REGRESSIONTESTER_H

#include <rtl/Dynamic_Library.h>
#include "../utils/Logger.h"

/**
 * Class responsible for execution of regression tests.
 */
class RegressionTester {
private:
    /// Path to the configuration which will be tested
    std::wstring config_filepath;
    /// Path to a log file, generated by testing execution.
    std::string resultLog;

    void loadConfig();
    std::vector<std::vector<std::string>> readLogFile(const std::string& logPath);
    bool compareLines(const std::vector<std::string>& resultLogLine, const std::vector<std::string>& referenceLogLine);
    void printLines(const std::vector<std::vector<std::string>>& errorResult);
    void printAndEmptyErrors(const refcnt::Swstr_list& errors);
    void printOneLine(const std::vector<std::string>& line);
public:
    /**
     * Loads configuration from given path into memory and executes it. Output will be a log which can be later tested
     * alongside the reference log for regression.
     *
     * @param config_filepath path to the configuration file
     */
    explicit RegressionTester(std::wstring config_filepath);
    /**
     * Compares generated log with reference log on given path.
     *
     * @param referenceLog path to reference log
     * @return result of regression test
     */
    HRESULT compareLogs(const std::string& referenceLog);
};
#endif //SMARTTESTER_UNITTESTER_H
